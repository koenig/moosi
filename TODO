- make everything a transaction
- firebase - content security policy (after firebase)
- todo size of website ?
- order-item displayName aus plant.name und plantName
**not**
- evt. direkte feedback funktion
- bigger touch area "inner button"
- order item  quick view in active order
- get some icons
- make the scss file more nice
- deprecations
- polymorphic transactions
- eigene icon font
- handle autofocus
- die tabs mit icons
- error handlings

**icons**
- rechnung
- packlisten
- pflanzen
- ettiket
- vermehrt
- jungpflanzen
- pflanzen
- analytics

**possible**
- make "settings" a real route (and the action sheet coming in outlet)
- :active state for :hover
- divider
- handle removing of quarters
- make single active order area
- loading state
- error handling
- make buttons disableable
- für den pc layouten
- make use of <header>
- should be possible to even get more plants from the order view
- new each
- vielleicht info auf pflanzen seite, dass man pflanzen aussuchen kann um neue zu erstellen oder verschieben von lagern
- style buttons in header
- deletemode reset (time or leaving of site)
- input validation (not null not empty strings)
** later **
- rename shouldshowcreate
- dryer routes
- app loading state
- transaction form input validation
- zu breit?
- passwort protection
- offline edit mode
- app scrolling bouncy when on "scrollable object"
- Vielleicht etwas mehr responsive bei den Buttons und Inputs nebeneinander
- caching im backend
- order items with hr?
- transactionables should not return collection on index (backend)
** maybe **

- import spinner
- maybe route logic instead of resources absically just moving order/edit to orders/order/edit
- rechnungen archivierbar machen
- "deleteable" is nur ne markierung
- customer auto fill in -- customer list -- customer select
- check for default values (where it makes sense)
- make test for isDeletable and use build in component macros
- move linkto in application route and make generic
- ember cli update
- ember data update
- access active order could be an initializer
- Em.run.later in one line
- write tests controller
- write tests for transaction, order selection, put back
- maybe show last added at active order/packing list
- farben noch mal überdenken
- goback could be generic too
- bubbles=false to avoid no's
- dry up animations code (create to model)
- etikett und vermehrt auf index
- issues menü punkt wäre an sich recht easy, macht es sinn? an sich schon vermutlich mehr issues (on the go) -> remember REWORK
- move data integrity to backend (positions for quarters etc.)
- packing list make done more obvious
-- make a line through in done
-- packinglist also use number for plant name
- make name in packing list linkable
- remove deprecated linkTo actions
- russian doll caching
- use composite pids (instead of id) for transactionals
- make positions json leaner
- somehow there is a problem when making transactions more than once
- man muss den preis in orders irgendwie ändern können
- new style 1 line json collections
**features**

- order item wird irgendwie doppelt angezeigt, bis zu nem reload
- da ist eine race condition in der ordnung der positions
- put back löst ein order select aus -> wenn has active order
- mehrmaliges ausführen von order selects sind scheinbar problematisch
- fehler catcher
- activate and test appcache
- backend mit frontend testen
**last**

- reihenfolge der positions beim speichern
- test everything online

-error while processing route: order.index Assertion Failed: ArrayProxy expects an Array or Ember.ArrayProxy

**done**
- seed plants/Lager
- server plant import
- create new quarter -> action to backend
- search fixed
- make active order fixed in position
- not donebar problem -> maybe hide donebar feature
- there is a problem withorder selections aid is not set
- clean up jbuilder files
- on did create make positions at backend
- scheinbar geht das mit den speichern der tab stände nicht mehr (zumindest bei pack list)
- vermehrt und labelled müssen safe auslösen
- order_selection should make transaction on create
- suche/filtern von pflanzen -- dieses pull down -- die richtige suche
- implement better search
- handle long plant names on index
- errors on order index
- error on goback from order
-- packlist: check if tabbed history link logic is still working (write tests)
- als vermehrt markieren
- etikett vorhanden markierung
- als vermehrt markieren (backend)
- etikett vorhanden markierung (backend)
- Also vermehrt (jungpflanzen) und Akt gesamt (fertige Pflanzen) hattest du ja schon eingebaut. -- Getopft und von 2012 (vom letzten Jahr) sind wohl nicht so wichtig. -- Es wäre super wenn ich zu den Pflanzen jeweils eintragen kann in welchem Quartier (Standort) ich die Pflanzen finde. -- Und es wär gut wenn ich markieren kann, ob Ich die pflanze schon vermehrt habe und ob ein Etikett vorhanden ist. -- Etikett erst brauche ich nicht.
- moosis übersicht / analytics
- nächste nummer ohne packing lists berechnen
- make missing objects (fixture id) go to normal route instead -> tests for
-- packing list "done" abhacken können (backend)
- den übergang after create schöner
-- packing list "done" abhacken können
-- after create of order and packing list go to the order and packing list instead of the overview
- Packlisten - Meinst du man kann das einbauen, dass ich genau wie bei der rechnungsfunktion auch nen "Packzettel" erstellen kann. Dann könnte ich zB abends nach einem Markttag noch auf dem Markt fehlende Positionen in den Packzettel einfügen und abends direkt aus den Quartieren nachpacken.
- make the packing list backend (add 'isPackingList')
- make active order link go to packing lists if necessary
- make packing list return customer as name
-- make the packing list filters for models routes
-- packlist: order model anpassen
-- packlists: tabbs titles and highlight
-- packlist: make the internal links obey orders/packing-list sublinks
-- packlist: tabbs
- use dependency injection for classname and is active tab
-- packlist: templates
-- packlist: controller kreieren
-- packlist: routen kreieren
-- packlist: router einstellen
- make adress take you to edit
- appcache
- add isyoung to backend
- server transactions beibringen (execute transfer)
- make quarters young or not youngable
- indecies in rails
- write tests models
- draggable aufräumen
- "backup"
- more details in order view
- zurücklegen verstecken
- when on order reload and select as active order we get double quarters
- update ember
- hier da ist irgendwie ein fehler bei den transactions
- das sieht komisch aus mit dem delete button in iphone, vielleicht etwas mehr responsive
- todo quarter button in own line
- select quarter in active order mode only for quarters with quantity
- quartiere namensänderung ohne speichern -> zurück -> rollback
-Transaktion abbrechen in plant
- double quarters when active order in plant
- avoid that btn-small is different in size
- icon should load correctly
- check adding of quarter
- no vendor css file to save one request
- empty states
- order adress only 2 colums
- autofocus works stange on new plant
- make colors for active state and active order a bit less colory
- maybe go back a ember version or two
- delete second results in still in edit mode
- item active state
- scrolling behavior of the whole site
- remove dependencies in bower (ionic)
- put back bug (canary?)
- is it possible to hide loading while going from orders to plants
- font: -apple-system-headline;
- loading state nice
- loading state
- deploy
- suddenly more than two quarters in order
- webapp capable
- icon
- form validations create plant
- goback from imports
- save and add next
- form validations create order
- rechnungen auch von kunden, pflanzen etc. unabhängig machen, unabhängigkeit, von rechnungen zu pflanzen und quarter
- make small links buttons likes outline buttons?
- style order and "card"
- more styling of numbers etc.
- second color
- jungpflanzen farbe
- fixed width for the collums in the list
- tabs deutlicher
- make the content sliding in having a border
- quantity of put back should be the same as plants available
- make the add plant not use a createRecord 'plant' (or another way to avoid cancleable plants)
- make the view know if they should fade in or not
- zurück auf die zurück seite
- upable down arrow
- use cents instead of floats
- nach putback reset transfer
- pflanzen 'löschbar'
- zurückleg aber dennoch da error
- zurücklegen macht auch, dass pflanzen bei null wieder aus einer rechnung verschwinden
- rechnungen löschbar, nachdem alle pflanzen zurückgelegt worden sind (mit hinweis darauf)
- import funktion von mehreren pflanzen gleichzeitig (autokorrektur ausmachen)
- style orders
- autokorrektur ausmachen
- pfeil nach links
- canary ember
- make orders editable
- active order "bestellmodus" stylen
- get the todos of the mosi app
- make the input field for transaction and buttons look good
- die tabs mit aktiv status
- small font utility
- make jungpflanzen
- beim zurucklegen soll man erst das lager auswählen und dann die zahl eingeben, anstatt gleich die option überall was einzufügen
- aktivity background
- secondary background
- rename 'add' zu 'neu'
- make transaction from orders to quarters "putback"
- scrolling
- style inputs and labels
- style dividers
- make bestellungen/pflanzen proper tabs
- make plants editable
- make the bestellung name number go on
- make bestell Nr
- make the quarters and positions update when adding a quarter
- calculate total for order
- also show prices in order items
- active order anklicken um die order anzuschauen
- positions in order anzeigen
- make it go to plants after clicking 'waren hinzufuegen'
- make activeOrderDeselectable
- make transactions from quarters to orders
- make order selectable for adding positions
- make quarters editable
- make quarters addable
- make the plant view only show created plants (or destroy plant if not created)
- make the orders view only show created orders (or destroy order if not created)
- make the "tabs" location aware (so that you can switch between orders and plants and remember the position)
- make price decimal view
- make plants editable
- make the plant order selector a footer
- create new order functionality
- make the order tabs
- make details orderview
- make orders overview
transaction # execute
# quantity should allow , in value
# check if quantity is legal smaller than from quantity
# should validate numericallity
# should be autocheckinh
# should validate not null or 0
- make reset transaction button appear only if there is an transaction
- make transactions from quarters
- transaction should be abordable
- make an quarters view
- make multiline items (class='item horizontal' > row)
- make an item clickable
- make an plant details view
- make the view full screen


** not **
- make the tabbar a real footer
